import matplotlib.pyplot as plt
import numpy as np

# Actual sine values
x_actual = np.linspace(0, np.pi / 2, 100)
y_actual = np.sin(x_actual)

# Data points for testing
x_test = np.array([1.28, 1.38, 1.25, 0.46, 0.39, 0.12, 0.24, 0.5, 0.16, 1.24, 0.32, 1.09, 1.05, 1.5, 1.13, 1.43, 0.81, 0.74, 1.22, 0.52, 1.33, 0.54, 0.64, 0.7, 0.55, 0.86, 0.92, 1.34, 0.53, 1.0, 1.36, 0.02, 1.55, 0.95, 0.04, 0.93, 1.18, 0.48, 0.69, 1.31, 1.47, 0.49, 1.35, 0.4, 0.03, 0.14, 0.63, 1.14, 1.41, 0.98, 0.11, 0.1, 0.61, 1.4, 0.66, 0.23, 1.17, 0.9, 0.38, 0.06, 0.67, 0.33, 1.51, 0.26, 1.54, 1.32, 0.84, 1.56, 0.41, 0.07, 1.2, 1.06, 0.78, 0.37, 0.17, 1.12, 0.2, 0.71, 0.27, 1.03, 0.88, 0.29, 1.23, 1.21, 0.6, 0.91, 0.28, 0.89, 0.36, 0.76, 0.96, 0.13, 0.97, 1.07, 1.27, 0.19, 0.0, 1.26, 1.57, 0.57, 1.37, 0.15, 0.25, 1.1, 0.68, 1.52, 1.16, 1.42, 0.75, 1.19, 1.04, 0.3, 0.83])
y_predicted = [0.9165504011847265, 0.9287503381962111, 0.9120778580486902, 0.42623602635978797, 0.3546498173025189, 0.15976942592832583, 0.22852841263147702, 0.46900536092635803, 0.1796876879749481, 0.9104885891076232, 0.29035031394887956, 0.8791315712601947, 0.8677319976309932, 0.9392853344923996, 0.8890847620059579, 0.9335914012613911, 0.7558807841231833, 0.7046857327844505, 0.9071511759192352, 0.4905582612116801, 0.923121876155449, 0.5120760632612001, 0.6155007272862422, 0.6711701276368491, 0.5227875674469056, 0.7867291503923384, 0.8179635821842423, 0.9243175886566654, 0.5013284361241247, 0.8511188508964181, 0.926601479408035, 0.12099421559584886, 0.9427164092331302, 0.8314440806703851, 0.1276338784522004, 0.8226061461994312, 0.8997832781734247, 0.4475280447127481, 0.6623233036810956, 0.9206162152826354, 0.9369841346432879, 0.45825034552514216, 0.9254770268193504, 0.3645035063798381, 0.12425103963516168, 0.16937824693444553, 0.6056629171617453, 0.891370120124292, 0.9317407144499257, 0.8436436872660861, 0.1552169984646071, 0.15082663945178848, 0.5855777051596033, 0.9307735213859508, 0.6347242547891426, 0.22172624662821444, 0.8977840178629798, 0.8082112145438133, 0.3449476452412479, 0.13479522649867012, 0.6440951116423148, 0.2989872884356422, 0.9400101500476514, 0.24274985767702212, 0.942067516027649, 0.9218885493743235, 0.7749414826912735, 0.9433478607067047, 0.37449931968173716, 0.13858268604927504, 0.9035884756608185, 0.8707288763772577, 0.7351077388062055, 0.33540567025386414, 0.18511539719707312, 0.8867211448147801, 0.20253524711219614, 0.6798329491473809, 0.25017055487914214, 0.8614234447148263, 0.7978097556459054, 0.26563128204969777, 0.908847015865203, 0.9053990331482057, 0.5753493698174157, 0.8131665941147895, 0.25779793456275696, 0.803093540723207, 0.3260318363659472, 0.720287451689957, 0.8356475431300309, 0.16448838154916848, 0.8397127346965404, 0.8736255075873546, 0.9151069765616976, 0.1965357355485973, 0.11484139994302535, 0.9136167134550371, 0.943962440217893, 0.5440492195203285, 0.9276921858780374, 0.17444330008769476, 0.23553595909003183, 0.881747556429776, 0.6532966663325653, 0.9407150135267841, 0.8957170986110317, 0.9326796810401584, 0.7125841238221826, 0.9017173137936298, 0.8646313786834732, 0.2736692502446115, 0.7687745708519226]

# Plot actual vs. predicted sine curve
plt.plot(x_actual, y_actual, label='Actual Sine Curve', color='blue')
plt.scatter(x_test, y_predicted, color='red', marker='x', label='Predicted Points')
plt.xlabel('x')
plt.ylabel('sin(x)')
plt.title('Sine Curve Comparison')
plt.legend()
plt.show()
